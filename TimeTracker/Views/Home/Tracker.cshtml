@model TimeTracker.Models.Class.Registros

@{
    ViewBag.Title = "Tracker";
}

<style>
    #EmpezarTarea {
        border: none;
        border-radius: 15px;
        box-shadow: 0 8px #999;
    }

        #EmpezarTarea:hover {
            background-color: #ffc107;
        }

    #EmpezarTarea:active {
        box-shadow: 0 5px #666;
        transform: translateY(4px);
    }

    #timer {
        font-family: 'Source Sans Pro';
        font-size: 1.5em;
        color: #1184e8;
    }
</style>

<div class="content-wrapper" style="min-height: 956px;">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Registro de Tareas
        </h1>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Descripcion</th>
                        <th scope="col">Lista de Proyectos</th>
                        <th scope="col">Lista de Etiquetas</th>
                        <th scope="col">Facturacion</th>
                        <th scope="col">Tiempo transcurrido</th>
                        <th scope="col">Accion</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <div class="form-group">
                                <input type="text" class="form-control" id="Descripcion" placeholder="En que estas trabajando?">
                            </div>
                        </td>
                        <td>
                            <select class="form-control" id="Proyectos">
                                @foreach (var proyecto in Model.ListaDeProyectos)
                                {
                                    <option value="@proyecto.Value">@proyecto.Text</option>
                                }
                            </select>
                            @*<div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <button class="btn btn-outline-success" type="button" id="AgregarProyecto"><i class="fa fa-fw fa-plus"></i></button>
                                </div>
                                <input type="text" class="form-control" id="NuevoProyecto" placeholder="Nuevo Proyecto">
                            </div>*@
                        </td>
                        <td>
                            <select class="form-control" id="Etiquetas">
                                @foreach (var etiqueta in Model.ListaDeEtiquetas)
                                {
                                    <option value="@etiqueta.Value">@etiqueta.Text</option>
                                }
                            </select>
                            @*<div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <button class="btn btn-outline-success" type="button" id="AgregarEtiqueta"><i class="fa fa-fw fa-plus"></i></button>
                                </div>
                                <input type="text" class="form-control" id="NuevaEtiqueta" placeholder="Nueva Etiqueta">
                            </div>*@
                        </td>
                        <td>
                            <div class="custom-control custom-switch">
                                <input type="checkbox" class="custom-control-input" id="Facturable">
                                <label class="custom-control-label" for="Facturable">Facturable</label>
                            </div>
                        </td>
                        <td id="timer">00:00:00</td>
                        <td>
                            <button type="button" class="btn btn-primary" id="EmpezarTarea">Empezar</button>
                            <button type="button" class="btn btn-danger" id="RegistrarTarea" style="display:none;">Detener</button>
                        </td>
                    </tr>
                </tbody>
            </table>

            <!-- SHOW RESULTS IN REGISTROS -->
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th scope="col">Descripcion</th>
                        <th scope="col">Proyecto</th>
                        <th scope="col">Etiqueta</th>
                        <th scope="col">Facturable</th>
                        <th scope="col">Periodo</th>
                        <th scope="col">Tiempo transcurrido</th>
                    </tr>
                </thead>
                <tbody id="Registers">
                </tbody>
            </table>
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->


</div>

<script src="../Content/jquery/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    !function (t, e) { "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e((t = t || self).easytimer = {}) }(this, function (t) { "use strict"; function C(t) { return (C = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } function e(e, t) { var n = Object.keys(e); if (Object.getOwnPropertySymbols) { var r = Object.getOwnPropertySymbols(e); t && (r = r.filter(function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable })), n.push.apply(n, r) } return n } function R(o) { for (var t = 1; t < arguments.length; t++) { var i = null != arguments[t] ? arguments[t] : {}; t % 2 ? e(Object(i), !0).forEach(function (t) { var e, n, r; e = o, r = i[n = t], n in e ? Object.defineProperty(e, n, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[n] = r }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(o, Object.getOwnPropertyDescriptors(i)) : e(Object(i)).forEach(function (t) { Object.defineProperty(o, t, Object.getOwnPropertyDescriptor(i, t)) }) } return o } function i(t, e, n) { var r, o = ""; if ((t = "number" == typeof t ? String(t) : t).length > e) return t; for (r = 0; r < e; r += 1)o += String(n); return (o + t).slice(-o.length) } function q() { this.reset() } function B() { this.events = {} } q.prototype.toString = function () { var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : ["hours", "minutes", "seconds"], e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : ":", n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 2; t = t || ["hours", "minutes", "seconds"], e = e || ":", n = n || 2; var r, o = []; for (r = 0; r < t.length; r += 1)void 0 !== this[t[r]] && ("secondTenths" === t[r] ? o.push(this[t[r]]) : o.push(i(this[t[r]], n, "0"))); return o.join(e) }, q.prototype.reset = function () { this.secondTenths = 0, this.seconds = 0, this.minutes = 0, this.hours = 0, this.days = 0 }, B.prototype.on = function (t, e) { var n = this; return Array.isArray(this.events[t]) || (this.events[t] = []), this.events[t].push(e), function () { return n.removeListener(t, e) } }, B.prototype.removeListener = function (t, e) { if (Array.isArray(this.events[t])) { var n = this.events[t].indexOf(e); -1 < n && this.events[t].splice(n, 1) } }, B.prototype.emit = function (t) { for (var e = this, n = arguments.length, r = new Array(1 < n ? n - 1 : 0), o = 1; o < n; o++)r[o - 1] = arguments[o]; Array.isArray(this.events[t]) && this.events[t].forEach(function (t) { return t.apply(e, r) }) }; var F = "secondTenths", G = "seconds", H = "minutes", J = "hours", K = "days", N = [F, G, H, J, K], Q = { secondTenths: 100, seconds: 1e3, minutes: 6e4, hours: 36e5, days: 864e5 }, W = { secondTenths: 10, seconds: 60, minutes: 60, hours: 24 }; function X(t, e) { return (t % e + e) % e } function n() { var e, n, o, r, i, s, u, c, a, f, h = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, d = new q, l = new q, p = new B, v = !1, y = !1, m = {}, g = { detail: { timer: this } }; function b(t, e) { var n, r, o = l[e]; return r = x(t, Q[n = e]), l[n] = r, d[n] = n === K ? r : 0 <= r ? X(r, W[n]) : W[n] - X(r, W[n]), l[e] !== o } function t() { w(), d.reset(), l.reset() } function w() { clearInterval(e), e = void 0, y = v = !1 } function O(t) { z() ? (a = j(), s = V(i.target)) : S(t), function () { var t = Q[n]; if (E(P(Date.now()))) return; e = setInterval(T, t), v = !0, y = !1 }() } function j() { return P(Date.now()) - l.secondTenths * Q[F] * o } function T() { var t = P(Date.now()); !function (t) { t[F] && I("secondTenthsUpdated", g); t[G] && I("secondsUpdated", g); t[H] && I("minutesUpdated", g); t[J] && I("hoursUpdated", g); t[K] && I("daysUpdated", g) }(A()), r(g.detail.timer), E(t) && (U(), I("targetAchieved", g)) } function A(t) { var e = 0 < arguments.length && void 0 !== t ? t : P(Date.now()), n = 0 < o ? e - a : a - e, r = {}; return r[F] = b(n, F), r[G] = b(n, G), r[H] = b(n, H), r[J] = b(n, J), r[K] = b(n, K), r } function P(t) { return Math.floor(t / Q[n]) * Q[n] } function E(t) { return s instanceof Array && f <= t } function S(t) { var e; n = function (t) { if (function (t) { return 0 <= N.indexOf(t) }(t = typeof t === "string" ? t : G)) return t; throw new Error("Error in precision parameter: ".concat(t, " is not a valid value")) }((t = t || {}).precision), r = "function" == typeof t.callback ? t.callback : function () { }, c = !0 === t.countdown, o = !0 == c ? -1 : 1, "object" === C(t.startValues) ? (e = t.startValues, u = D(e), d.secondTenths = u[0], d.seconds = u[1], d.minutes = u[2], d.hours = u[3], d.days = u[4], l = L(u, l)) : u = null, a = j(), A(), s = "object" === C(t.target) ? V(t.target) : c ? (t.target = { seconds: 0 }, V(t.target)) : null, m = { precision: n, callback: r, countdown: "object" === C(t) && !0 === t.countdown, target: s, startValues: u }, i = t } function D(t) { var e; if ("object" === C(t)) if (t instanceof Array) { if (5 !== t.length) throw new Error("Array size not valid"); e = t } else { for (var n in t) if (N.indexOf(n) < 0) throw new Error("Error in startValues or target parameter: ".concat(n, " is not a valid input value")); e = [t.secondTenths || 0, t.seconds || 0, t.minutes || 0, t.hours || 0, t.days || 0] } var r = e[0], o = e[1] + x(r, 10), i = e[2] + x(o, 60), s = e[3] + x(i, 60), u = e[4] + x(s, 24); return e[0] = r % 10, e[1] = o % 60, e[2] = i % 60, e[3] = s % 24, e[4] = u, e } function x(t, e) { var n = t / e; return n < 0 ? Math.ceil(n) : Math.floor(n) } function V(t) { if (t) { var e = L(s = D(t)); return f = a + e.secondTenths * Q[F] * o, s } } function L(t, e) { var n = e || {}; return n.days = t[4], n.hours = 24 * n.days + t[3], n.minutes = 60 * n.hours + t[2], n.seconds = 60 * n.minutes + t[1], n.secondTenths = 10 * n.seconds + t[[0]], n } function U() { t(), I("stopped", g) } function k(t, e) { p.on(t, e) } function M(t, e) { p.removeListener(t, e) } function I(t, e) { p.emit(t, e) } function _() { return v } function z() { return y } S(h), void 0 !== this && (this.start = function () { var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}; t = R(R({}, h), t), _() || (O(t), I("started", g)) }, this.pause = function () { w(), y = !0, I("paused", g) }, this.stop = U, this.reset = function () { t(), O(i), I("reset", g) }, this.isRunning = _, this.isPaused = z, this.getTimeValues = function () { return d }, this.getTotalTimeValues = function () { return l }, this.getConfig = function () { return m }, this.addEventListener = k, this.on = k, this.removeEventListener = M, this.off = M) } t.Timer = n, t.default = n, Object.defineProperty(t, "__esModule", { value: !0 }) });
</script>
<script>
    $(document).ready(function () {
        var timer = new easytimer.Timer();
        var userId = 1016;
        var initTime;
        var isFirst = false;
        var endTime;

        renderRegisters(JSON.parse(('@Model.ListaDeRegistros').replace(/&quot;/g, '"')));

        function switchButton(toggle) {
            if (toggle) {
                $('#EmpezarTarea').hide();
                $('#RegistrarTarea').show();
            } else {
                $('#EmpezarTarea').show();
                $('#RegistrarTarea').hide();
            }
        }

        $('#EmpezarTarea').on('click', function () {
            switchButton(true);
            timer.start();
            if (!isFirst) { initTime = Date.now(); isFirst = true; }

        });

        $('#RegistrarTarea').on('click', function () {
            switchButton(false);
            timer.stop();
        });

        timer.addEventListener('secondsUpdated', function (e) {
            $('#timer').html(timer.getTimeValues().toString());
        });

        timer.addEventListener('stopped', function (e) {
            endTime = Date.now();
            isFirst = false;
            $('#timer').html(timer.getTimeValues().toString());
            saveRegister();
        });

        function saveRegister() {
            var description = $('#Descripcion').val();
            var isBillable = $('#Facturable').is(':checked');
            var tagId = $('#Etiquetas option:selected').val();
            var projectId = $('#Proyectos option:selected').val();

            var register = {
                HoraInicio: initTime,
                HoraFinal: endTime,
                Descripcion: description,
                Facturable: isBillable,
                UsuarioId: userId,
                EtiquetaId: tagId,
                ProyectoId: projectId
            };

            console.log(register);
            $.ajax({
                method: 'post',
                url: '../Home/Tracker',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(register),
                success: function (response) {
                    console.log(response);
                    $('#Descripcion').val('');
                    renderRegisters(response);
                }
            });
        }


        function renderRegisters(registers) {
            $('#Registers').empty();
            var data;
            for (register of registers) {
                var isBillable = (register.Facturable) ? 'Si' : 'No';
                var description = (register.Descripcion) ? register.Descripcion : '';
                data += '<tr>' +
                    '<td>' + description + '</td>' +
                    '<td>' + register.NombreDeProyecto + '</td>' +
                    '<td>' + register.NombreDeEtiqueta + '</td>' +
                    '<td>' + isBillable + '</td>' +
                    '<td>' + getTime(Number(register.HoraInicio)) + '-' + getTime(Number(register.HoraFinal)) + '</td>' +
                    '<td>' + secondsToHMS(Number(register.HoraFinal), Number(register.HoraInicio)) + '</td>' +
                    '<td><div class="dropdown">' +
                    '<button type="button" class="btn btn-outline-primary dropdown-toggle" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">' +
                    '<svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-three-dots-vertical" fill="currentColor" xmlns="http://www.w3.org/2000/svg" >' +
                        '<path fill-rule="evenodd" d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"></path>' +
                    '</svg >'+
                    '</button>'+
                        '<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">' +
                            '<button class="dropdown-item deleteButton"  delete="'+register.RegistroId+'">Eliminar</button>' +
                            '<button class="dropdown-item editButton" edit="'+register.RegistroId+'" descripcion="'+description+'">Editar</button>' +
                        '</div>' +
                    '</div>' +
                    '</tr>'
            }
            $('#Registers').append(data);
        }

        $('body').on('click', '.deleteButton', function (e) {
            var id = $(this).attr('delete');
            console.log(id);
            Swal.fire({
                title: 'Estas seguro?',
                text: "Quieres eliminar este registro",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'SI, borralo!'
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteRegisterInDB(id);
                }
            });
            
        });

        function deleteRegisterInDB(id) {
            var register = { registroId: id };
            $.ajax({
                method: 'post',
                url: '../Home/EliminarRegistro',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(register),
                success: function (response) {
                    Swal.fire(
                        'Eliminado!',
                        'El registro ' + id + ' se ha eliminado',
                        'success'
                    );
                    renderRegisters(response);
                }
            });
            
        }

        $('body').on('click', '.editButton', async function (e) {
            var id = $(this).attr('edit');
            var description = $(this).attr('descripcion');
            console.log(id);
            var newDescription = await Swal.fire({
                title: 'Edita la descripcion',
                input: 'text',
                inputLabel: 'Descripcion',
                inputValue: description,
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return 'Escribe algo compa!'
                    }
                }
            });

            if (newDescription.isConfirmed) {
                console.log(newDescription);
                editRegisterInDB(id, newDescription.value);
            }
        });

        function editRegisterInDB(id, description) {
            var register = { registroId: id, descripcion: description };
            $.ajax({
                method: 'post',
                url: '../Home/EditarRegistro',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(register),
                success: function (response) {
                    Swal.fire(
                        'Editado!',
                        'El registro ' + id + ' se ha modificado',
                        'success'
                    );
                    renderRegisters(response);
                }
            });
        }

        function getTime(timestamp) {
            var today = new Date(timestamp);
            var h = today.getHours();
            var m = checkTime(today.getMinutes());
            var s = checkTime(today.getSeconds());
            return h + ":" + m + ":" + s;
        }

        function checkTime(time) {
            if (time < 10) {
                time = "0" + time;
            }
            return time;
        }

        function secondsToHMS(date0, date1) {
            var diffMilliseconds = date0 - date1;
            var secs = diffMilliseconds / 1000;
            function z(n) { return (n < 10 ? '0' : '') + n; }
            var sign = secs < 0 ? '-' : '';
            secs = Math.abs(secs);
            return sign + z(secs / 3600 | 0) + ':' + z((secs % 3600) / 60 | 0) + ':' + z(secs % 60);
        }
    });


</script>



